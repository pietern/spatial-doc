
.. role:: black
.. role:: gray
.. role:: silver
.. role:: white
.. role:: maroon
.. role:: red
.. role:: fuchsia
.. role:: pink
.. role:: orange
.. role:: yellow
.. role:: lime
.. role:: green
.. role:: olive
.. role:: teal
.. role:: cyan
.. role:: aqua
.. role:: blue
.. role:: navy
.. role:: purple

.. _SRAM:

SRAM
====


**SRAMs** are on-chip scratchpads with fixed size. SRAMs can be specified as multi-dimensional, but the underlying addressing
in hardware is always flat. The contents of SRAMs are persistent across loop iterations, even when they are declared in an inner scope.
Up to 5-dimensional SRAMs are currently supported.


---------------

**Static methods**

+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| object     **SRAM**                                                                                                                                                                                                                                                                                                                                           |
+==========+====================================================================================================================================================================================================================================================================================================================================================+
| |    def   **apply**\[T\::doc:`Type <../../../typeclasses/type>`\::doc:`Bits <../../../typeclasses/bits>`\]\(length\: :doc:`Index <../../../common/fixpt>`\)\: :doc:`SRAM1 <sram>`\[T\]                                                                                                                                                                       |
| |            Allocates a 1-dimensional SRAM with the specified **length**.                                                                                                                                                                                                                                                                                    |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **apply**\[T\::doc:`Type <../../../typeclasses/type>`\::doc:`Bits <../../../typeclasses/bits>`\]\(rows\: :doc:`Index <../../../common/fixpt>`, cols\: :doc:`Index <../../../common/fixpt>`\)\: :doc:`SRAM2 <sram>`\[T\]                                                                                                                            |
| |            Allocates a 2-dimensional SRAM with the specified number of **rows** and **cols**.                                                                                                                                                                                                                                                               |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **apply**\[T\::doc:`Type <../../../typeclasses/type>`\::doc:`Bits <../../../typeclasses/bits>`\]\(p\: :doc:`Index <../../../common/fixpt>`, r\: :doc:`Index <../../../common/fixpt>`, c\: :doc:`Index <../../../common/fixpt>`\)\: :doc:`SRAM3 <sram>`\[T\]                                                                                        |
| |            Allocates a 3-dimensional SRAM with the specified dimensions.                                                                                                                                                                                                                                                                                    |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **apply**\[T\::doc:`Type <../../../typeclasses/type>`\::doc:`Bits <../../../typeclasses/bits>`\]\(q\: :doc:`Index <../../../common/fixpt>`, p\: :doc:`Index <../../../common/fixpt>`, r\: :doc:`Index <../../../common/fixpt>`, c\: :doc:`Index <../../../common/fixpt>`\)\: :doc:`SRAM4 <sram>`\[T\]                                              |
| |            Allocates a 4-dimensional SRAM with the specified dimensions.                                                                                                                                                                                                                                                                                    |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **apply**\[T\::doc:`Type <../../../typeclasses/type>`\::doc:`Bits <../../../typeclasses/bits>`\]\(m\: :doc:`Index <../../../common/fixpt>`, q\: :doc:`Index <../../../common/fixpt>`, p\: :doc:`Index <../../../common/fixpt>`, r\: :doc:`Index <../../../common/fixpt>`, c\: :doc:`Index <../../../common/fixpt>`\)\: :doc:`SRAM5 <sram>`\[T\]    |
| |            Allocates a 5-dimensional SRAM with the specified dimensions.                                                                                                                                                                                                                                                                                    |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+



--------------

**Infix methods**

+----------------+------------------------------------------------------------+
| abstract class   **SRAM**\[T\]                                              |
+================+============================================================+
| |          def   **dims**\: List\[:doc:`Index <../../../common/fixpt>`\]    |
| |                  Returns a Scala List of the dimensions of this DRAM      |
+----------------+------------------------------------------------------------+



+----------+-----------------------------------------------------------------------------------------------------------------------------+
| class      **SRAM1**\[T\] extends SRAM\[T\]                                                                                            |
+==========+=============================================================================================================================+
| |    def   **length**\: :doc:`Index <../../../common/fixpt>`                                                                           |
| |            Returns the total size of this SRAM1.                                                                                     |
+----------+-----------------------------------------------------------------------------------------------------------------------------+
| |    def   **size**\: :doc:`Index <../../../common/fixpt>`                                                                             |
| |            Returns the total size of this SRAM1.                                                                                     |
+----------+-----------------------------------------------------------------------------------------------------------------------------+
| |    def   **par**\(p\: :doc:`Index <../../../common/fixpt>`\)\: :doc:`SRAM1 <sram>`\[T\] = { val x = :doc:`SRAM1 <sram>`\(s\); x.p    |
| |            Annotates that addresses in this SRAM1 can be read in parallel by factor **p**.                                           |
| |                                                                                                                                      |
| |            Used when creating references to sparse regions of DRAM.                                                                  |
+----------+-----------------------------------------------------------------------------------------------------------------------------+
| |    def   **apply**\(a\: :doc:`Index <../../../common/fixpt>`\)\: T                                                                   |
| |            Returns the value in this SRAM1 at the given address **a**.                                                               |
+----------+-----------------------------------------------------------------------------------------------------------------------------+
| |    def   **update**\(a\: :doc:`Index <../../../common/fixpt>`, data\: T\)\: :doc:`Unit <../../../common/unit>`                       |
| |            Updates the value in this SRAM1 at the given address **a** to **data**.                                                   |
+----------+-----------------------------------------------------------------------------------------------------------------------------+
| |    def   **gather**\(dram\: :doc:`DRAMSparseTile <../offchip/sparsetile>`\[T\]\)\: :doc:`Unit <../../../common/unit>`                |
| |            Create a sparse load from the given sparse region of DRAM to this on-chip memory.                                         |
| |                                                                                                                                      |
| |            Elements will be gathered and stored contiguously in this memory.                                                         |
+----------+-----------------------------------------------------------------------------------------------------------------------------+
| |    def   **load**\(dram\: :doc:`DRAM1 <../offchip/dram>`\[T\]\)\: :doc:`Unit <../../../common/unit>`                                 |
| |            Create a dense, burst load from the given region of DRAM to this on-chip memory.                                          |
+----------+-----------------------------------------------------------------------------------------------------------------------------+
| |    def   **load**\(dram\: :doc:`DRAMDenseTile1 <../offchip/tile>`\[T\]\)\: :doc:`Unit <../../../common/unit>`                        |
| |            Create a dense, burst load from the given region of DRAM to this on-chip memory.                                          |
+----------+-----------------------------------------------------------------------------------------------------------------------------+




+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| class      **SRAM2**\[T\] extends SRAM\[T\]                                                                                                                       |
+==========+========================================================================================================================================================+
| |    def   **rows**\: :doc:`Index <../../../common/fixpt>`                                                                                                        |
| |            Returns the number of rows in this SRAM2.                                                                                                            |
+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **cols**\: :doc:`Index <../../../common/fixpt>`                                                                                                        |
| |            Returns the number of columns in this SRAM2.                                                                                                         |
+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **size**\: :doc:`Index <../../../common/fixpt>`                                                                                                        |
| |            Returns the total size of this SRAM2.                                                                                                                |
+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **apply**\(row\: :doc:`Index <../../../common/fixpt>`, col\: :doc:`Index <../../../common/fixpt>`\)\: T                                                |
| |            Returns the value in this SRAM2 at the given **row** and **col**.                                                                                    |
+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **update**\(row\: :doc:`Index <../../../common/fixpt>`, col\: :doc:`Index <../../../common/fixpt>`, data\: T\)\: :doc:`Unit <../../../common/unit>`    |
| |            Updates the value in this SRAM2 at the given **row** and **col** to **data**.                                                                        |
+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **par**\(p\: :doc:`Index <../../../common/fixpt>`\)\: :doc:`SRAM2 <sram>`\[T\] = { val x = :doc:`SRAM2 <sram>`\(s\); x.p                               |
| |            Annotates that addresses in this SRAM2 can be read in parallel by factor **p**.                                                                      |
| |                                                                                                                                                                 |
| |            Used when creating references to sparse regions of DRAM.                                                                                             |
+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **load**\(dram\: :doc:`DRAM2 <../offchip/dram>`\[T\]\)\: :doc:`Unit <../../../common/unit>`                                                            |
| |            Create a dense, burst load from the given region of DRAM to this on-chip memory.                                                                     |
+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **load**\(dram\: :doc:`DRAMDenseTile2 <../offchip/tile>`\[T\]\)\: :doc:`Unit <../../../common/unit>`                                                   |
| |            Create a dense, burst load from the given region of DRAM to this on-chip memory.                                                                     |
+----------+--------------------------------------------------------------------------------------------------------------------------------------------------------+



+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| class      **SRAM3**\[T\] extends SRAM\[T\]                                                                                                                                                             |
+==========+==============================================================================================================================================================================================+
| |    def   **dim0**\: :doc:`Index <../../../common/fixpt>`                                                                                                                                              |
| |            Returns the first dimension of this SRAM3.                                                                                                                                                 |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **dim1**\: :doc:`Index <../../../common/fixpt>`                                                                                                                                              |
| |            Returns the second dimension of this SRAM3.                                                                                                                                                |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **dim2**\: :doc:`Index <../../../common/fixpt>`                                                                                                                                              |
| |            Returns the third dimension of this SRAM3.                                                                                                                                                 |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **size**\: :doc:`Index <../../../common/fixpt>`                                                                                                                                              |
| |            Returns the total size of this SRAM3.                                                                                                                                                      |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **apply**\(a\: :doc:`Index <../../../common/fixpt>`, b\: :doc:`Index <../../../common/fixpt>`, c\: :doc:`Index <../../../common/fixpt>`\)\: T                                                |
| |            Returns the value in this SRAM3 at the given 3-dimensional address **a**, **b**, **c**.                                                                                                    |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **update**\(a\: :doc:`Index <../../../common/fixpt>`, b\: :doc:`Index <../../../common/fixpt>`, c\: :doc:`Index <../../../common/fixpt>`, data\: T\)\: :doc:`Unit <../../../common/unit>`    |
| |            Updates the value in this SRAM3 at the given 3-dimensional address to **data**.                                                                                                            |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **par**\(p\: :doc:`Index <../../../common/fixpt>`\)\: :doc:`SRAM3 <sram>`\[T\] = { val x = :doc:`SRAM3 <sram>`\(s\); x.p                                                                     |
| |            Annotates that addresses in this SRAM2 can be read in parallel by factor **p**.                                                                                                            |
| |                                                                                                                                                                                                       |
| |            Used when creating references to sparse regions of DRAM.                                                                                                                                   |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **load**\(dram\: :doc:`DRAM3 <../offchip/dram>`\[T\]\)\: :doc:`Unit <../../../common/unit>`                                                                                                  |
| |            Create a dense, burst load from the given region of DRAM to this on-chip memory.                                                                                                           |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **load**\(dram\: :doc:`DRAMDenseTile3 <../offchip/tile>`\[T\]\)\: :doc:`Unit <../../../common/unit>`                                                                                         |
| |            Create a dense, burst load from the given region of DRAM to this on-chip memory.                                                                                                           |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+




+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| class      **SRAM4**\[T\] extends SRAM\[T\]                                                                                                                                                                                                       |
+==========+========================================================================================================================================================================================================================================+
| |    def   **dim0**\: :doc:`Index <../../../common/fixpt>`                                                                                                                                                                                        |
| |            Returns the first dimension of this SRAM4.                                                                                                                                                                                           |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **dim1**\: :doc:`Index <../../../common/fixpt>`                                                                                                                                                                                        |
| |            Returns the second dimension of this SRAM4.                                                                                                                                                                                          |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **dim2**\: :doc:`Index <../../../common/fixpt>`                                                                                                                                                                                        |
| |            Returns the third dimension of this SRAM4.                                                                                                                                                                                           |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **dim3**\: :doc:`Index <../../../common/fixpt>`                                                                                                                                                                                        |
| |            Returns the fourth dimension of this SRAM4.                                                                                                                                                                                          |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **size**\: :doc:`Index <../../../common/fixpt>`                                                                                                                                                                                        |
| |            Returns the total size of this SRAM4.                                                                                                                                                                                                |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **apply**\(a\: :doc:`Index <../../../common/fixpt>`, b\: :doc:`Index <../../../common/fixpt>`, c\: :doc:`Index <../../../common/fixpt>`, d\: :doc:`Index <../../../common/fixpt>`\)\: T                                                |
| |            Returns the value in this SRAM4 at the 4-dimensional address **a**, **b**, **c**, **d**.                                                                                                                                             |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **update**\(a\: :doc:`Index <../../../common/fixpt>`, b\: :doc:`Index <../../../common/fixpt>`, c\: :doc:`Index <../../../common/fixpt>`, d\: :doc:`Index <../../../common/fixpt>`, data\: T\)\: :doc:`Unit <../../../common/unit>`    |
| |            Updates the value in this SRAM4 at the 4-dimensional address to **data**.                                                                                                                                                            |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **load**\(dram\: :doc:`DRAM4 <../offchip/dram>`\[T\]\)\: :doc:`Unit <../../../common/unit>`                                                                                                                                            |
| |            Create a dense, burst load from the given region of DRAM to this on-chip memory.                                                                                                                                                     |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **load**\(dram\: :doc:`DRAMDenseTile4 <../offchip/tile>`\[T\]\)\: :doc:`Unit <../../../common/unit>`                                                                                                                                   |
| |            Create a dense, burst load from the given region of DRAM to this on-chip memory.                                                                                                                                                     |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+




+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| class      **SRAM5**\[T\] extends SRAM\[T\]                                                                                                                                                                                                                                                 |
+==========+==================================================================================================================================================================================================================================================================================+
| |    def   **dim0**\: :doc:`Index <../../../common/fixpt>`                                                                                                                                                                                                                                  |
| |            Returns the first dimension of this SRAM5.                                                                                                                                                                                                                                     |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **dim1**\: :doc:`Index <../../../common/fixpt>`                                                                                                                                                                                                                                  |
| |            Returns the second dimension of this SRAM5.                                                                                                                                                                                                                                    |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **dim2**\: :doc:`Index <../../../common/fixpt>`                                                                                                                                                                                                                                  |
| |            Returns the third dimension of this SRAM5.                                                                                                                                                                                                                                     |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **dim3**\: :doc:`Index <../../../common/fixpt>`                                                                                                                                                                                                                                  |
| |            Returns the fourth dimension of this SRAM5.                                                                                                                                                                                                                                    |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **dim4**\: :doc:`Index <../../../common/fixpt>`                                                                                                                                                                                                                                  |
| |            Returns the fifth dimension of this SRAM5.                                                                                                                                                                                                                                     |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **size**\: :doc:`Index <../../../common/fixpt>`                                                                                                                                                                                                                                  |
| |            Returns the total size of this SRAM5.                                                                                                                                                                                                                                          |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **apply**\(a\: :doc:`Index <../../../common/fixpt>`, b\: :doc:`Index <../../../common/fixpt>`, c\: :doc:`Index <../../../common/fixpt>`, d\: :doc:`Index <../../../common/fixpt>`, e\: :doc:`Index <../../../common/fixpt>`\)\: T                                                |
| |            Returns the value in this SRAM5 at the 5-dimensional address **a**, **b**, **c**, **d**, **e**.                                                                                                                                                                                |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **update**\(a\: :doc:`Index <../../../common/fixpt>`, b\: :doc:`Index <../../../common/fixpt>`, c\: :doc:`Index <../../../common/fixpt>`, d\: :doc:`Index <../../../common/fixpt>`, e\: :doc:`Index <../../../common/fixpt>`, data\: T\)\: :doc:`Unit <../../../common/unit>`    |
| |            Updates the value in this SRAM5 at the 5-dimensional address to **data**.                                                                                                                                                                                                      |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **load**\(dram\: :doc:`DRAM5 <../offchip/dram>`\[T\]\)\: :doc:`Unit <../../../common/unit>`                                                                                                                                                                                      |
| |            Create a dense, burst load from the given region of DRAM to this on-chip memory.                                                                                                                                                                                               |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| |    def   **load**\(dram\: :doc:`DRAMDenseTile5 <../offchip/tile>`\[T\]\)\: :doc:`Unit <../../../common/unit>`                                                                                                                                                                             |
| |            Create a dense, burst load from the given region of DRAM to this on-chip memory.                                                                                                                                                                                               |
+----------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

